source ./gromacs/gromacs-2020/bin/bin/GMXRC

start_dir=$( pwd )
charmm_gui_dir=$( echo ./charmm-gui/gromacs ) 

dothis=no
if [ $dothis = yes ]
then

outdir=$( echo $start_dir/MD-equil)
mkdir $outdir
cd $outdir
pwd

### INITIAL MODEL: see README-I ###

### TOPOLOGY ###

cp -r $charmm_gui_dir/toppar .
cp $charmm_gui_dir/step3_input.gro .

cat>topol.top<<EOF
;; The main GROMACS topology file
;; generated by setup.sh 

; Include forcefield parameters
#include "toppar/forcefield.itp"
#include "toppar/PROA.itp"
#include "toppar/CARA.itp"
#include "toppar/SOD.itp"
#include "toppar/CLA.itp"
#include "toppar/TIP3.itp"

[ system ]
; Name
var2csa+csa

[ molecules ]
; Compound	#mols
PROA	   1
CARA  	           1
EOF


### EQUILIBRIUM SIMULATION ###
 
# A === minimize in vacuum === 
gmx editconf -f step3_input.gro -d 2.0 -bt dodecahedron -o box.gro

cp $charmm_gui_dir/step4.0_minimization.mdp $start_dir/ 
gmx grompp  -f $start_dir/step4.0_minimization.mdp -p topol.top -c box.gro -r box.gro -o em.tpr -maxwarn 2 
gmx mdrun --deffnm em -v

# B === solvate ===
gmx solvate -cp em.gro -o box_solvated.gro -p topol.top  


# C === add ions ===
sed 's/SOL /TIP3/g' topol.top > tmp
mv tmp topol.top

gmx grompp -f $start_dir/minimization.mdp -p topol.top -c box_solvated.gro -r box_solvated.gro -o tmp.tpr -maxwarn 2  
echo TIP3 | gmx genion -s tmp.tpr -p topol.top -o system_neutral.gro -neutral -conc 0.15  -pname SOD -nname CLA    


# D === minimize ===
gmx grompp -f $start_dir/step4.0_minimization.mdp -p topol.top -c system_neutral.gro -r system_neutral.gro -o em-system.tpr   >& out || { cat out; exit 1; }


# E === equilibrate ===
for run in {1..10}
do

    echo $run 
    mkdir $run

# nvt (all heavy-atom position restraints; FC=1000)
    gmx grompp -f $start_dir/nvt.mdp -c em-system.gro -r em-system.gro -p topol.top -o $run/nvt.tpr -po $run/mdout.mdp  

# npt (all heavy-atom position restraints; FC=1000)
    gmx grompp -f $start_dir/npt.mdp -c $run/nvt.gro -r em-system.gro -p topol.top -o $run/npt.tpr -po $run/mdout.mdp  
   
    rm -f $run/\#*\#
done


# npt (protein backbone position restraints; FC=100)
echo q | gmx make_ndx -f em-system.gro 
echo 4 | gmx genrestr -f em-system.gro -n index.ndx -fc 100 100 100 -o toppar/posres_backbone.itp 

cat>>toppar/PROA.itp<<EOF
; Include Position restraint file
#ifdef POSRESPROTBB
#include "posres_backbone.itp"
#endif
EOF
 

for run in {1..10}
do

    echo $run 
    
    gmx grompp -f $start_dir/npt_bb.mdp -c $run/npt.gro -r em-system.gro -p topol.top -o $run/npt_bb.tpr -po $run/mdout.mdp  

    rm -f $run/\#*\#
done


# F === production equilibration ===
for run in  {1..10}
do

    echo $run 
    
    gmx grompp -f $start_dir/run-equil.mdp -c $run/npt_bb.gro -p topol.top -o $run/run.tpr -po $run/mdout.mdp
    
    rm -f $run/\#*\#
done
 

# G === postprocessing ===
for run in 5 # {1..10}
do

    echo $run 
    cd $run

    # remove water and ions
    {
    echo \"System\" \&\! \"TIP3\" \&\! \"SOD\" \&\! \"CLA\"
    echo q
    } | gmx make_ndx -f run.gro
    
    # treat pbc
    echo System_\&_\!TIP3_\&_\!SOD_\&_\!CLA | gmx trjconv -f run.xtc -s run.tpr -n index.ndx -ur compact -pbc mol -o run_pp.xtc
    
    echo System_\&_\!TIP3_\&_\!SOD_\&_\!CLA | gmx editconf -f run.gro -n index.ndx -o run_pp.gro
      
    # extract equilibrated frame (180ns)
    echo System_\&_\!TIP3_\&_\!SOD_\&_\!CLA | gmx trjconv -f run_pp.xtc -s run_pp.gro -n index.ndx -dump 180000 -o frame_180ns.gro
     
    # extract equilibrated frame (200ns)
    echo System_\&_\!TIP3_\&_\!SOD_\&_\!CLA | gmx trjconv -f run_pp.xtc -s run_pp.gro -n index.ndx -dump 200000 -o frame_200ns.gro
    
    rm -f \#*\#
    cd ..

done


### FORCE PROBE SIMULATION  ###

pulldir=$( echo $start_dir/MD-pull)
mkdir $pulldir
cd $pulldir
pwd

for run in {1..10}
do

    mkdir $run
    cp -r $outdir/toppar $run/
    cp $outdir/topol.top $run/
    cp $outdir/$run/frame_200ns.gro $run/start.gro
        
    run_new=$((run + 10)) 
    mkdir $run_new
    cp -r $outdir/toppar $run_new/
    cp $outdir/topol.top $run_new/
    cp $outdir/$run/frame_180ns.gro $run_new/start.gro
    
done


pulldir=$( echo $start_dir/MD-pull)
cd $pulldir

for run in {1..20}
do

    cd $run
    
    # adjust topology
    sed '/TIP3 /d' topol.top > tmp; mv tmp topol.top
    sed '/SOD /d' topol.top > tmp; mv tmp topol.top
    sed '/CLA /d' topol.top > tmp; mv tmp topol.top

    # A === solvate ===
    gmx editconf -f start.gro -box 18 18 30 -c -o box.gro 
    
    #echo q | gmx make_ndx -f box.gro
    echo 3 0 | gmx trjconv -f box.gro -s $pulldir/2/box.gro -n index.ndx -fit rot+trans -o aligned.gro
    
    #gmx solvate -cp aligned.gro -o solvated.gro -p topol.top
    sed 's/SOL /TIP3/g' topol.top > tmp
    mv tmp topol.top
    
    # B === add ions ===
    gmx grompp -f $start_dir/minimization.mdp -p topol.top -c solvated.gro -r solvated.gro -o tmp.tpr -maxwarn 2 
    echo TIP3 | gmx genion -s tmp.tpr -p topol.top -o neutral.gro -neutral -conc 0.15  -pname SOD -nname CLA
    
    # C === minimize ===
    gmx grompp -f $start_dir/minimization.mdp -p topol.top -c neutral.gro -r neutral.gro -o pull-em.tpr
    
    # D === NVT ===
    # position restraints on backbone atoms (FC = 100)
    gmx grompp -f $start_dir/nvt.mdp -c pull-em.gro -r pull-em.gro -p topol.top -o pull-nvt.tpr
    
    # E === production force probe ===
    {
    echo r 1 \& r BGLCA
    echo r 1953 \& a CA
    echo q
    } | gmx make_ndx -f pull-nvt.gro -o pull.ndx

    gmx grompp -f $start_dir/run-pull.mdp -c pull-nvt.gro -p topol.top -n pull.ndx -o pull-run.tpr -maxwarn 2

    rm -f \#*\#
    cd ..

done

pulldir=$(echo $start_dir/MD-pull/)
cd $pulldir
pwd 
# G === postprocessing ===
for run in {1..20}
do

    echo $run 
    cd $run

    # remove water and ions
    {
    echo \"System\" \&\! \"TIP3\" \&\! \"SOD\" \&\! \"CLA\"
    echo q
    } | gmx make_ndx -f pull-nvt.gro

    echo System_\&_\!TIP3_\&_\!SOD_\&_\!CLA | gmx editconf -f pull-nvt.gro -n index.ndx -o pull-nvt_pp.gro

    # treat pbc
    echo System_\&_\!TIP3_\&_\!SOD_\&_\!CLA | gmx trjconv -f pull-run.xtc -s pull-run.tpr -n index.ndx -ur compact -pbc mol -o pull-run_pp.xtc

    rm -f \#*\#
    rm slurm*
    cd ..

done

### EQUILIBRATION OF DOCKED STRUCTURES  ###

outdir=$( echo $start_dir/MD-dock-equil)
mkdir $outdir
cd $outdir
pwd

# A === Topology ===
cp -r ./docking/dbl4-major-binding-site/toppar .

#rm toppar/PROA-short.itp
#input_file="toppar/PROA.itp"
#output_file="toppar/PROA-short.itp"

#arr=()
#for i in {30802..31187}
#do 
#  echo "$i" 
#  arr+=("$i")
#done

#line_num=1

#while IFS= read -r line; do
#  contains=no
#  if [[ $line_num -ge 30810 && $line_num -le 31204 ]] || [[ $line_num -gt 31204 && "$line" =~ ^3  ]]; then
#    echo $line  
#    for word in "${arr[@]}"; do
#      if echo "$line" | grep -q "$word"; then
#	echo ";$line" >> "$output_file"
#	contains=yes
#	break
#      fi
#    done
#  fi
  
#  if [ $contains = no ]; then
#    echo "$line" >> "$output_file"
#  fi    
#  line_num=$((line_num+1))
#done < "$input_file"

cp $outdir/test/toppar/PROA-short.itp toppar/PROA-short.itp

cat>topol.top<<EOF
;; The main GROMACS topology file
;; generated by setup.sh 

; Include forcefield parameters
#include "toppar/forcefield.itp"
#include "toppar/PROA-short.itp"
#include "toppar/CARA.itp"
#include "toppar/CARA-11.itp"
#include "toppar/SOD.itp"
#include "toppar/CLA.itp"
#include "toppar/TIP3.itp"

[ system ]
; Name
docked var2csa+csa

[ molecules ]
; Compound	#mols
PROA		1
CARA		1
CARA-11  	1
EOF

# B === minimize in vacuum (Camilo) === 
mkdir minor-binding-site dbl4-major-binding-site
cp -r ./docking/minor-binding-site/cluster*_1.pdb+H minor-binding-site/
cp -r ./docking/dbl4-major-binding-site/cluster*_1.pdb+H dbl4-major-binding-site/

# C === Minimization ===
directories=$(find . -type d -name 'cluster*_1.pdb+H')
#directories=$(find . -type d -name 'cluster12_1.pdb+H')

for dir in $directories; do
    cd $dir
    pwd
    
    # get topology
    cp $outdir/topol.top .
    cp -r $outdir/toppar .
    
    # remove unfolded part of C-terminus
    {
    echo \"System\" \&\! r 1931-1953    
    echo q
    } | gmx make_ndx -f em.gro 
    
    echo System_\&_\!r_1931-1953 System_\&_\!r_1931-1953 | gmx editconf -f em.gro -n index.ndx -d 2.0 -bt cubic -o box.gro
    
    # align CA's with first replicate
    {
    echo r 1 \& r BGLCA \& a 30801-30822
    echo r 1930 \& a CA
    echo q
    } | gmx make_ndx -f box.gro -o pull.ndx
    
    echo 3 0 | gmx trjconv -f box.gro -s $outdir/dbl4-major-binding-site/cluster1_1.pdb+H/box.gro -n pull.ndx -fit rot+trans -o align.gro
    
    # check coordinates of pull groups
    echo 15 16 | gmx traj -f align.gro -s align.gro -n pull.ndx -ox coord-check.xvg -noy -noz -ng 2 -com 
    
    # solvate
    gmx solvate -cp align.gro -o solvated.gro -p topol.top
    sed 's/SOL /TIP3/g' topol.top > tmp
    mv tmp topol.top
    
    # add ions
    gmx grompp -f $start_dir/minimization.mdp -p topol.top -c solvated.gro -r solvated.gro -o tmp.tpr -maxwarn 2 
    echo TIP3 | gmx genion -s tmp.tpr -p topol.top -o neutral.gro -neutral -conc 0.15  -pname SOD -nname CLA
    
    # minimize 
    gmx grompp -f $start_dir/minimization.mdp -p topol.top -c neutral.gro -r neutral.gro -o dock-em.tpr    
    
    rm \#*\#
    cd ..  
done    

# D === NVT ===

for dir in $directories; do
    cd $dir
    pwd  
   # position restraints on backbone atoms (FC = 100)
    gmx grompp -f $start_dir/nvt.mdp -c dock-em.gro -r dock-em.gro -p topol.top -o dock-nvt.tpr  
    rm \#*\#
    cd ..  
done
   
directories=$(find . -type d -name 'cluster*_1.pdb+H')

# E === Equilibration ===
for dir in $directories; do
    cd $dir
    pwd  
    # addjust coordinates of .mdp
    cp $start_dir/run-dock.mdp .
    last_line=$(tail -n 1 coord-check.xvg)
    	# sugar
    coord1=$(echo "$last_line" | awk '{print $2}')
    sed -i "s/^pull-coord1-origin\s*=\s*[^ ]*\s*/pull-coord1-origin = $coord1 /" run-dock.mdp
    	# protein
    coord2=$(echo "$last_line" | awk '{print $3}')
    sed -i "s/^pull-coord2-origin\s*=\s*[^ ]*\s*/pull-coord2-origin = $coord2 /" run-dock.mdp
    
    {
    echo r 1 \& r BGLCA \& a 30801-30822
    echo r 1930 \& a CA
    echo q
    } | gmx make_ndx -f dock-nvt.gro -o pull.ndx
    
    gmx grompp -f run-dock.mdp -c dock-nvt.gro -p topol.top -n pull.ndx -o dock-run.tpr -maxwarn 2
  
    rm \#*\#
    cd ..  
done

fi
outdir=$( echo $start_dir/MD-dock-equil)
mkdir $outdir
cd $outdir
pwd


# G === postprocessing ===
directories=$(find . -type d -wholename '*-binding-site/cluster*_1.pdb+H')
#directories=$(find . -type d -name 'cluster12_1.pdb+H')

for dir in $directories; do
    cd $dir
    echo $dir
    # reduce trajectory size
    echo 0 | gmx trjconv -f dock-run.xtc -s dock-run.tpr -dt 100 -o dock-run-reduced.xtc
    # remove water and ions
    {
    echo \"System\" \&\! \"TIP3\" \&\! \"SOD\" \&\! \"CLA\"
    echo q
    } | gmx make_ndx -f dock-nvt.gro

    echo System_\&_\!TIP3_\&_\!SOD_\&_\!CLA | gmx editconf -f dock-nvt.gro -n index.ndx -o dock-nvt_pp.gro

    # treat pbc
    echo System_\&_\!TIP3_\&_\!SOD_\&_\!CLA | gmx trjconv -f dock-run-reduced.xtc -s dock-run.tpr -n index.ndx -ur compact -pbc mol -o dock-run_pp.xtc

    rm -f \#*\#
    rm slurm*
    cd $outdir

done
